{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/home/home.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/providers/imdd/imdd.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;;;;;;;;;;;;;;ACV0C;AAEY;AAQtD;IAIE,kBAAmB,WAA0B;QAA1B,gBAAW,GAAX,WAAW,CAAe;QAF7C,WAAM,GAAG,IAAI,CAAC;QAGZ,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,yBAAM,GAAN;QAAA,iBAQC;QAPC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC7C,UAAC,IAAS;YACP,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QACrC,CAAC,EAAE,eAAK;YACV,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,2BAAQ,GAAR,UAAS,IAAI;QACX,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;IAC1B,CAAC;IArBU,QAAQ;QALpB,wEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,WAAW,2EAAa;WACA;SACzB,CAAC;iBAK6C;OAJlC,QAAQ,CAuBpB;IAAD,OAAC;;AAAA;SAvBY,QAAQ,e;;;;;;;;ACVrB;AAAA;AAAA;AAA2E;AAElC;AAEzC,yGAAsB,EAAE,CAAC,eAAe,CAAC,8DAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACJM;AACH;AACkB;AACd;AACN;AACb;AACA;AACM;AACQ;AA6BtD;IAAA;IAAwB,CAAC;IAAZ,SAAS;QA3BrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,6DAAK;gBACL,kEAAQ;aACT;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,kEAAW,CAAC,OAAO,CAAC,6DAAK,EAAE,EAAE,EACjC;oBACE,KAAK,EAAE,EAEN;iBACF,CAAC;gBACE,iEAAU;aACX;YACD,SAAS,EAAE,CAAC,+DAAQ,CAAC;YACrB,eAAe,EAAE;gBACf,6DAAK;gBACL,kEAAQ;aACT;YACD,SAAS,EAAE;gBACT,2EAAS;gBACT,iFAAY;gBACZ,EAAC,OAAO,EAAE,mEAAY,EAAE,QAAQ,EAAE,wEAAiB,EAAC;gBACpD,0EAAY;aACb;SACF,CAAC;OACW,SAAS,CAAG;IAAD,gBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACrCoB;AACD;AACY;AACM;AAEb;AAI9C;IAGE,eAAY,QAAkB,EAAE,SAAoB,EAAE,YAA0B;QAFhF,aAAQ,GAAO,kEAAQ,CAAC;QAGtB,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACpB,gEAAgE;YAChE,iEAAiE;YACjE,SAAS,CAAC,YAAY,EAAE,CAAC;YACzB,YAAY,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAVU,KAAK;QAHjB,wEAAS,CAAC;WACc;SACxB,CAAC;cAIgF;OAHrE,KAAK,CAWjB;IAAD,CAAC;AAAA;SAXY,KAAK,2B;;;;;;;;;;;;;;;;;;;;ACTkB;AACO;AAI3C;IAIE,sBAAmB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAF7B,gBAAW,GAAG,0BAA0B,CAAC;IAER,CAAC;IAIlC,4BAAK,GAAL,UAAM,EAAE;QACN,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC,SAAS,EAAE,GAAC,KAAK,GAAC,EAAE,CAAC;IAClE,CAAC;IAED,gCAAS,GAAT;QACE,MAAM,CAAC,gBAAgB;IACzB,CAAC;IAdU,YAAY;QADxB,yEAAU,EAAE;6DAKc,2DAAI,oBAAJ,2DAAI;OAJlB,YAAY,CAgBxB;IAAD,mBAAC;;CAAA;AAhBwB","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 108;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 108\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 149;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 149\n// module chunks = 0","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport {ImddProvider} from '../../providers/imdd/imdd'\n\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html',\n  providers:[ImddProvider]\n})\nexport class HomePage {\n  id_movie;\n  objRet = null;\n\n  constructor(public imdbService : ImddProvider) {\n    this.search();\n  }\n\n  search(){\n    this.imdbService.getID(this.id_movie).subscribe(\n      (data: any)=>{\n         this.carregar(JSON.parse(data._body));\n          }, error=>{\n        console.log(error);\n      }\n    );\n  }\n\n  carregar(data){\n    this.objRet = data;\n    console.log(this.objRet)\n  }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport {HttpModule} from '@angular/http'\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { ImddProvider } from '../providers/imdd/imdd';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp),\n    HttpModule,\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    ImddProvider\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Http } from \"@angular/http\"\nimport { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class ImddProvider {\n\n  basePathUrl = \"http://www.omdbapi.com/?\";\n\n  constructor(public http: Http) { }\n\n  \n\n  getID(id){\n    return this.http.get(this.basePathUrl+this.getApiKey()+\"&i=\"+id)\n  }\n\n  getApiKey() {\n    return \"apikey=1c49a45\"\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/imdd/imdd.ts"],"sourceRoot":""}